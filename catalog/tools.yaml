# Minimal examples; extend per tool
tools:
  - id: "github-mcp"
    bin: "github-mcp"
    discovery:
      commands: ["github-mcp", "npx -y @modelcontextprotocol/github-mcp"]
    installers:
      macos:
        - type: npm
          command: "npm i -g @modelcontextprotocol/github-mcp"
      linux:
        - type: npm
          command: "npm i -g @modelcontextprotocol/github-mcp"
      windows:
        - type: npm
          command: "npm i -g @modelcontextprotocol/github-mcp"
    health:
      version: { command: "github-mcp --version" }
      probe:   { command: "github-mcp --help" }
    meta:
      notes: "Access GitHub repositories, issues, and PRs through AI"
      envPrompts:
        - key: "GITHUB_TOKEN"
          label: "GitHub Personal Access Token"
          secret: true

  - id: "filesystem-mcp"
    bin: "npx"
    discovery:
      commands: ["npx -y @modelcontextprotocol/server-filesystem"]
    installers:
      macos:
        - type: npm
          command: "npm i -g @modelcontextprotocol/server-filesystem"
      linux:
        - type: npm
          command: "npm i -g @modelcontextprotocol/server-filesystem"
      windows:
        - type: npm
          command: "npm i -g @modelcontextprotocol/server-filesystem"
    health:
      version: { command: "npx -y @modelcontextprotocol/server-filesystem --help" }
    meta:
      notes: "Read and write files in specified directories"

  - id: "memory-mcp"
    bin: "npx"
    discovery:
      commands: ["npx -y @modelcontextprotocol/server-memory"]
    installers:
      macos:
        - type: npm
          command: "npm i -g @modelcontextprotocol/server-memory"
      linux:
        - type: npm
          command: "npm i -g @modelcontextprotocol/server-memory"
      windows:
        - type: npm
          command: "npm i -g @modelcontextprotocol/server-memory"
    health:
      version: { command: "npx -y @modelcontextprotocol/server-memory --help" }
    meta:
      notes: "Store and retrieve information in memory during conversations"

  - id: "playwright-mcp"
    bin: "playwright-mcp"
    discovery:
      commands: ["playwright-mcp", "npx -y @playwright/mcp"]
    installers:
      macos:
        - type: npm
          command: "npm i -g @playwright/mcp"
      linux:
        - type: npm
          command: "npm i -g @playwright/mcp"
      windows:
        - type: npm
          command: "npm i -g @playwright/mcp"
    health:
      version: { command: "playwright-mcp --version" }
      probe:   { command: "playwright-mcp --help" }
    meta:
      notes: "Automate web browsers for testing and web scraping"

  - id: "mcp-proxy-supergateway"
    bin: "npx"
    discovery:
      commands: ["npx -y supergateway --version"]
    installers:
      macos:
        - type: npm
          command: "npm i -g supergateway@3.4.0"
      linux:
        - type: npm
          command: "npm i -g supergateway@3.4.0"
      windows:
        - type: npm
          command: "npm i -g supergateway@3.4.0"
    health:
      version: { command: "npx -y supergateway --version" }
      preWarm: { command: "npx -y supergateway --help" }
      probeHttp: { command: "npx -y supergateway --streamableHttp https://example.invalid --help" }
    meta:
      notes: "Convert local MCP servers to HTTP/SSE endpoints for remote access"
